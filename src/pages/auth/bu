// src/components/Profile.jsx
import React, { useState } from "react";
import {
  useGetEmployerProfileQuery,
  useUpdateEmployerProfileMutation,
} from "../../redux/api/employerApi";

export default function EmployerProfile() {
  const { data: profile, isLoading, error } = useGetEmployerProfileQuery();
  const [updateEmployerProfile, { isLoading: isUpdating, error: updateError }] =
    useUpdateEmployerProfileMutation();

  const [editingField, setEditingField] = useState(null); // Tracks which field is being edited
  const [formData, setFormData] = useState({});

  if (isLoading) {
    return <div className="text-center p-6">Loading profile...</div>;
  }

  if (error) {
    return (
      <div className="text-center p-6 text-red-500">
        Error loading profile: {error.data?.message || "Something went wrong."}
      </div>
    );
  }

  if (!profile) {
    return <div className="text-center p-6">No profile data available.</div>;
  }

  const handleEdit = (field) => {
    setEditingField(field);
    setFormData({ [field]: profile[field] || "" }); // Initialize with current value
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ [name]: value });
  };

  const handleSave = async (field) => {
    try {
      await updateEmployerProfile({ [field]: formData[field] }).unwrap();
      setEditingField(null);
      setFormData({});
      alert(`${field.replace("_", " ")} updated successfully!`);
    } catch (err) {
      console.error(`Failed to update ${field}:`, err);
    }
  };

  const handleCancel = () => {
    setEditingField(null);
    setFormData({});
  };

  const renderField = (label, field, value, type = "text") => {
    if (editingField === field) {
      if (type === "textarea") {
        return (
          <div className="space-y-2">
            <p>
              <strong>{label} (Current):</strong> {value || "N/A"}
            </p>
            <div className="flex items-center space-x-2">
              <textarea
                name={field}
                value={formData[field] || ""}
                onChange={handleChange}
                rows="3"
                className="w-full border p-2 rounded"
              />
              <button
                onClick={() => handleSave(field)}
                className="px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700"
                disabled={isUpdating}
              >
                {isUpdating ? "Saving..." : "Save"}
              </button>
              <button
                onClick={handleCancel}
                className="px-2 py-1 bg-gray-300 rounded hover:bg-gray-400"
              >
                Cancel
              </button>
            </div>
          </div>
        );
      } else if (type === "select") {
        return (
          <div className="space-y-2">
            <p>
              <strong>{label} (Current):</strong> {value || "N/A"}
            </p>
            <div className="flex items-center space-x-2">
              <select
                name={field}
                value={formData[field] || ""}
                onChange={handleChange}
                className="w-full border p-2 rounded"
              >
                <option value="IT">IT</option>
                <option value="Finance">Finance</option>
                <option value="Engineering">Engineering</option>
                <option value="Chief">Chief</option>
              </select>
              <button
                onClick={() => handleSave(field)}
                className="px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700"
                disabled={isUpdating}
              >
                {isUpdating ? "Saving..." : "Save"}
              </button>
              <button
                onClick={handleCancel}
                className="px-2 py-1 bg-gray-300 rounded hover:bg-gray-400"
              >
                Cancel
              </button>
            </div>
          </div>
        );
      } else {
        return (
          <div className="space-y-2">
            <p>
              <strong>{label} (Current):</strong>{" "}
              {field === "website_url" && value ? (
                <a
                  href={value}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-blue-500 hover:underline"
                >
                  {value}
                </a>
              ) : (
                value || "N/A"
              )}
            </p>
            <div className="flex items-center space-x-2">
              <input
                type={type}
                name={field}
                value={formData[field] || ""}
                onChange={handleChange}
                className="w-full border p-2 rounded"
              />
              <button
                onClick={() => handleSave(field)}
                className="px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700"
                disabled={isUpdating}
              >
                {isUpdating ? "Saving..." : "Save"}
              </button>
              <button
                onClick={handleCancel}
                className="px-2 py-1 bg-gray-300 rounded hover:bg-gray-400"
              >
                Cancel
              </button>
            </div>
          </div>
        );
      }
    }

    return (
      <div className="flex justify-between items-center">
        <p>
          <strong>{label}:</strong>{" "}
          {field === "website_url" && value ? (
            <a
              href={value}
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-500 hover:underline"
            >
              {value}
            </a>
          ) : (
            value || "N/A"
          )}
        </p>
        <button
          onClick={() => handleEdit(field)}
          className="px-2 py-1 bg-cyan-900 text-white rounded hover:bg-blue-700"
        >
          Edit
        </button>
      </div>
    );
  };

  return (
    <div className="max-w-2xl mx-auto p-6  shadow-md rounded-lg">
      <h1 className="text-2xl font-bold mb-6 text-center">Employer Profile</h1>
      <div className="space-y-4 text-gray-700">
        {/* Account Details */}
        <div className="border-b pb-4">
          <h2 className="text-lg font-semibold mb-2">Account Information</h2>
          {renderField("Username", "username", profile.username)}
          {renderField("Email", "email", profile.email, "email")}
        </div>

        {/* Company Details */}
        <div className="border-b pb-4">
          <h2 className="text-lg font-semibold mb-2">Company Information</h2>
          {renderField("Company Name", "company_name", profile.company_name)}
          {renderField(
            "Registered Number",
            "registered_number",
            profile.registered_number
          )}
          {renderField(
            "Contact Phone",
            "contact_phone",
            profile.contact_phone,
            "tel"
          )}
          {renderField("Website", "website_url", profile.website_url, "url")}
          {renderField("Industry", "industry", profile.industry, "select")}
        </div>

        {/* Contact Details */}
        <div className="border-b pb-4">
          <h2 className="text-lg font-semibold mb-2">Address</h2>
          {renderField("Address Line", "address_line", profile.address_line)}
          {renderField("City", "city", profile.city)}
          {renderField("State/Province", "state", profile.state)}
          {renderField("Postal Code", "postal_code", profile.postal_code)}
          {renderField("Country", "country", profile.country)}
        </div>

        {/* Description */}
        <div className="pb-4">
          <h2 className="text-lg font-semibold mb-2">Additional Details</h2>
          {renderField(
            "Description",
            "company_description",
            profile.company_description,
            "textarea"
          )}
        </div>
      </div>
      {updateError && (
        <p className="text-red-500 mt-4">
          {updateError.data?.message || "Update failed."}
        </p>
      )}
    </div>
  );
} // // src/components/Profile.jsx
// import React, { useState } from "react";
// import {
//   useGetEmployerProfileQuery,
//   useUpdateEmployerProfileMutation,
// } from "../../redux/api/employerApi";

// export default function EmployerProfile() {
//   const { data: profile, isLoading, error } = useGetEmployerProfileQuery();
//   const [updateEmployerProfile, { isLoading: isUpdating, error: updateError }] =
//     useUpdateEmployerProfileMutation();

//   const [editingField, setEditingField] = useState(null); // Tracks which field is being edited
//   const [formData, setFormData] = useState({});

//   if (isLoading) {
//     return <div className="text-center p-6">Loading profile...</div>;
//   }

//   if (error) {
//     return (
//       <div className="text-center p-6 text-red-500">
//         Error loading profile: {error.data?.message || "Something went wrong."}
//       </div>
//     );
//   }

//   if (!profile) {
//     return <div className="text-center p-6">No profile data available.</div>;
//   }

//   const handleEdit = (field) => {
//     setEditingField(field);
//     setFormData({ [field]: profile[field] || "" }); // Initialize with current value
//   };

//   const handleChange = (e) => {
//     const { name, value } = e.target;
//     setFormData({ [name]: value });
//   };

//   const handleSave = async (field) => {
//     try {
//       await updateEmployerProfile({ [field]: formData[field] }).unwrap();
//       setEditingField(null);
//       setFormData({});
//       alert(`${field.replace("_", " ")} updated successfully!`);
//     } catch (err) {
//       console.error(`Failed to update ${field}:`, err);
//     }
//   };

//   const handleCancel = () => {
//     setEditingField(null);
//     setFormData({});
//   };

//   const renderField = (label, field, value, type = "text") => {
//     if (editingField === field) {
//       if (type === "textarea") {
//         return (
//           <div className="space-y-2">
//             <p>
//               <strong>{label} (Current):</strong> {value || "N/A"}
//             </p>
//             <div className="flex items-center space-x-2">
//               <textarea
//                 name={field}
//                 value={formData[field] || ""}
//                 onChange={handleChange}
//                 rows="3"
//                 className="w-full border p-2 rounded"
//               />
//               <button
//                 onClick={() => handleSave(field)}
//                 className="px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700"
//                 disabled={isUpdating}
//               >
//                 {isUpdating ? "Saving..." : "Save"}
//               </button>
//               <button
//                 onClick={handleCancel}
//                 className="px-2 py-1 bg-gray-300 rounded hover:bg-gray-400"
//               >
//                 Cancel
//               </button>
//             </div>
//           </div>
//         );
//       } else if (type === "select") {
//         return (
//           <div className="space-y-2">
//             <p>
//               <strong>{label} (Current):</strong> {value || "N/A"}
//             </p>
//             <div className="flex items-center space-x-2">
//               <select
//                 name={field}
//                 value={formData[field] || ""}
//                 onChange={handleChange}
//                 className="w-full border p-2 rounded"
//               >
//                 <option value="IT">IT</option>
//                 <option value="Finance">Finance</option>
//                 <option value="Engineering">Engineering</option>
//                 <option value="Chief">Chief</option>
//               </select>
//               <button
//                 onClick={() => handleSave(field)}
//                 className="px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700"
//                 disabled={isUpdating}
//               >
//                 {isUpdating ? "Saving..." : "Save"}
//               </button>
//               <button
//                 onClick={handleCancel}
//                 className="px-2 py-1 bg-gray-300 rounded hover:bg-gray-400"
//               >
//                 Cancel
//               </button>
//             </div>
//           </div>
//         );
//       } else {
//         return (
//           <div className="space-y-2">
//             <p>
//               <strong>{label} (Current):</strong>{" "}
//               {field === "website_url" && value ? (
//                 <a
//                   href={value}
//                   target="_blank"
//                   rel="noopener noreferrer"
//                   className="text-blue-500 hover:underline"
//                 >
//                   {value}
//                 </a>
//               ) : (
//                 value || "N/A"
//               )}
//             </p>
//             <div className="flex items-center space-x-2">
//               <input
//                 type={type}
//                 name={field}
//                 value={formData[field] || ""}
//                 onChange={handleChange}
//                 className="w-full border p-2 rounded"
//               />
//               <button
//                 onClick={() => handleSave(field)}
//                 className="px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700"
//                 disabled={isUpdating}
//               >
//                 {isUpdating ? "Saving..." : "Save"}
//               </button>
//               <button
//                 onClick={handleCancel}
//                 className="px-2 py-1 bg-gray-300 rounded hover:bg-gray-400"
//               >
//                 Cancel
//               </button>
//             </div>
//           </div>
//         );
//       }
//     }

//     return (
//       <div className="flex justify-between items-center">
//         <p>
//           <strong>{label}:</strong>{" "}
//           {field === "website_url" && value ? (
//             <a
//               href={value}
//               target="_blank"
//               rel="noopener noreferrer"
//               className="text-blue-500 hover:underline"
//             >
//               {value}
//             </a>
//           ) : (
//             value || "N/A"
//           )}
//         </p>
//         <button
//           onClick={() => handleEdit(field)}
//           className="px-2 py-1 bg-cyan-900 text-white rounded hover:bg-blue-700"
//         >
//           Edit
//         </button>
//       </div>
//     );
//   };

//   return (
//     <div className="max-w-2xl mx-auto p-6 bg-white shadow-md rounded-lg">
//       <h1 className="text-2xl font-bold mb-6 text-center">Employer Profile</h1>
//       <div className="space-y-4 text-gray-700">
//         {/* Account Details */}
//         <div className="border-b pb-4">
//           <h2 className="text-lg font-semibold mb-2">Account Information</h2>
//           {renderField("Username", "username", profile.username)}
//           {renderField("Email", "email", profile.email, "email")}
//         </div>

//         {/* Company Details */}
//         <div className="border-b pb-4">
//           <h2 className="text-lg font-semibold mb-2">Company Information</h2>
//           {renderField("Company Name", "company_name", profile.company_name)}
//           {renderField(
//             "Registered Number",
//             "registered_number",
//             profile.registered_number
//           )}
//           {renderField(
//             "Contact Phone",
//             "contact_phone",
//             profile.contact_phone,
//             "tel"
//           )}
//           {renderField("Website", "website_url", profile.website_url, "url")}
//           {renderField("Industry", "industry", profile.industry, "select")}
//         </div>

//         {/* Contact Details */}
//         <div className="border-b pb-4">
//           <h2 className="text-lg font-semibold mb-2">Address</h2>
//           {renderField("Address Line", "address_line", profile.address_line)}
//           {renderField("City", "city", profile.city)}
//           {renderField("State/Province", "state", profile.state)}
//           {renderField("Postal Code", "postal_code", profile.postal_code)}
//           {renderField("Country", "country", profile.country)}
//         </div>

//         {/* Description */}
//         <div className="pb-4">
//           <h2 className="text-lg font-semibold mb-2">Additional Details</h2>
//           {renderField(
//             "Description",
//             "company_description",
//             profile.company_description,
//             "textarea"
//           )}
//         </div>
//       </div>
//       {updateError && (
//         <p className="text-red-500 mt-4">
//           {updateError.data?.message || "Update failed."}
//         </p>
//       )}
//     </div>
//   );
// } // import React, { useState } from "react";
// // import {
// //   useRegisterEmployerMutation,
// //   useCreateEmployerProfileMutation,
// // } from "../../redux/api/employerApi";

// // const steps = ["Account", "Company", "Contact", "Description", "Review"];

// // export default function Register() {
// //   const [step, setStep] = useState(0); // Start at 0 to align with array indices
// //   const [userId, setUserId] = useState(null);

// //   const [formData, setFormData] = useState({
// //     username: "ef",
// //     employerEmail: "a@mail.com",
// //     password: "abc",
// //     confirmPassword: "abc",
// //     brandName: "labs",
// //     registeredNumber: "33333333", // Added field
// //     contactPhone: "",
// //     addressLine: "",
// //     city: "",
// //     state: "",
// //     postalCode: "",
// //     country: "",
// //     websiteUrl: "",
// //     industry: "IT",
// //     companyDescription: "",
// //     logoUrl: null,
// //   });

// //   const [registerEmployer, { isLoading: isRegistering, error: registerError }] =
// //     useRegisterEmployerMutation();
// //   const [
// //     createEmployerProfile,
// //     { isLoading: isSavingProfile, error: profileError },
// //   ] = useCreateEmployerProfileMutation();

// //   const renderStep = () => {
// //     switch (step) {
// //       case 0:
// //         return (
// //           <Step1
// //             formData={formData}
// //             setFormData={setFormData}
// //             onNext={handleStep1Next}
// //             isRegistering={isRegistering}
// //             registerError={registerError}
// //           />
// //         );
// //       case 1:
// //         return <Step2 formData={formData} setFormData={setFormData} />;
// //       case 2:
// //         return <Step3 formData={formData} setFormData={setFormData} />;
// //       case 3:
// //         return <Step4 formData={formData} setFormData={setFormData} />;
// //       case 4:
// //         return (
// //           <Step5
// //             formData={formData}
// //             onSubmit={handleFinalSubmit}
// //             isSavingProfile={isSavingProfile}
// //             profileError={profileError}
// //           />
// //         );
// //       default:
// //         return null;
// //     }
// //   };

// //   const handleStep1Next = async () => {
// //     const employerData = {
// //       username: formData.username,
// //       email: formData.employerEmail,
// //       password: formData.password,
// //       confirmPassword: formData.confirmPassword,
// //       role: "employer",
// //     };

// //     try {
// //       const response = await registerEmployer(employerData).unwrap();
// //       setUserId(response.userId); // Assuming backend returns userId
// //       setStep(1); // Move to Step 2
// //     } catch (error) {
// //       console.error("Registration failed:", error);
// //     }
// //   };

// //   const handleFinalSubmit = async () => {
// //     if (!userId) {
// //       alert("User not registered. Please complete Step 1.");
// //       return;
// //     }

// //     const profileData = {
// //       user_id: userId,
// //       company_name: formData.brandName,
// //       registered_number: formData.registeredNumber || null, // Allow null if empty
// //       contact_phone: formData.contactPhone,
// //       address_line: formData.addressLine,
// //       city: formData.city,
// //       state: formData.state,
// //       postal_code: formData.postalCode,
// //       country: formData.country,
// //       website_url: formData.websiteUrl,
// //       industry: formData.industry,
// //       company_description: formData.companyDescription,
// //       logo_url: formData.logoUrl,
// //     };

// //     try {
// //       await createEmployerProfile(profileData).unwrap();
// //       alert("Profile saved successfully!");
// //       window.location.href = "/dashboard";
// //     } catch (error) {
// //       console.error("Profile save failed:", error);
// //     }
// //   };

// //   const handleNext = () => {
// //     if (step === 0 && !userId) {
// //       alert("Please complete registration in Step 1 first.");
// //       return;
// //     }
// //     if (step < steps.length - 1) setStep(step + 1);
// //   };

// //   const handleBack = () => {
// //     if (step > 0) setStep(step - 1);
// //   };

// //   return (
// //     <div className="max-w-2xl mx-auto p-6">
// //       <div className="w-full bg-cyan-100 h-2 rounded-full mb-6">
// //         <div
// //           className="bg-cyan-500 h-2 rounded-full transition-all duration-300"
// //           style={{ width: `${((step + 1) / steps.length) * 100}%` }} // Adjusted for 0-based index
// //         />
// //       </div>
// //       <div className="text-center font-semibold mb-4">
// //         Step {step + 1} of {steps.length}: {steps[step]}
// //       </div>

// //       {renderStep()}

// //       <div className="flex justify-between mt-6">
// //         {step > 0 && (
// //           <button
// //             onClick={handleBack}
// //             className="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400"
// //           >
// //             Back
// //           </button>
// //         )}
// //         {step < steps.length - 1 && (
// //           <button
// //             onClick={handleNext}
// //             className="px-4 py-2 bg-cyan-900 text-white rounded hover:bg-blue-700 ml-auto"
// //             disabled={isRegistering || isSavingProfile}
// //           >
// //             Next
// //           </button>
// //         )}
// //       </div>
// //     </div>
// //   );
// // }

// // // Step 1 Component
// // const Step1 = ({
// //   formData,
// //   setFormData,
// //   onNext,
// //   isRegistering,
// //   registerError,
// // }) => {
// //   return (
// //     <div className="space-y-4">
// //       <input
// //         type="text"
// //         placeholder="Username"
// //         className="w-full border p-2 rounded"
// //         value={formData.username}
// //         onChange={(e) => setFormData({ ...formData, username: e.target.value })}
// //         required
// //       />
// //       <input
// //         type="email"
// //         placeholder="example@mail.com"
// //         className="w-full border p-2 rounded"
// //         value={formData.employerEmail}
// //         onChange={(e) =>
// //           setFormData({ ...formData, employerEmail: e.target.value })
// //         }
// //         required
// //       />
// //       <input
// //         type="password"
// //         placeholder="Password"
// //         className="w-full border p-2 rounded"
// //         value={formData.password}
// //         onChange={(e) => setFormData({ ...formData, password: e.target.value })}
// //         required
// //       />
// //       <input
// //         type="password"
// //         placeholder="Confirm Password"
// //         className="w-full border p-2 rounded"
// //         value={formData.confirmPassword}
// //         onChange={(e) =>
// //           setFormData({ ...formData, confirmPassword: e.target.value })
// //         }
// //         required
// //       />
// //       {registerError && (
// //         <p className="text-red-500">
// //           {registerError.data?.message || "Registration failed."}
// //         </p>
// //       )}
// //       <button
// //         onClick={onNext}
// //         className="px-4 py-2 bg-cyan-900 text-white rounded hover:bg-blue-700 w-full"
// //         disabled={isRegistering}
// //       >
// //         {isRegistering ? "Registering..." : "Register & Next"}
// //       </button>
// //     </div>
// //   );
// // };

// // // Step 2 Component (Added registeredNumber)
// // const Step2 = ({ formData, setFormData }) => {
// //   return (
// //     <div className="space-y-4">
// //       <input
// //         type="text"
// //         placeholder="Company Name"
// //         className="w-full border p-2 rounded"
// //         value={formData.brandName}
// //         onChange={(e) =>
// //           setFormData({ ...formData, brandName: e.target.value })
// //         }
// //         required
// //       />
// //       <input
// //         type="text"
// //         placeholder="Registered Number (optional)"
// //         className="w-full border p-2 rounded"
// //         value={formData.registeredNumber}
// //         onChange={(e) =>
// //           setFormData({ ...formData, registeredNumber: e.target.value })
// //         }
// //       />
// //       <input
// //         type="tel"
// //         placeholder="Contact Phone"
// //         className="w-full border p-2 rounded"
// //         value={formData.contactPhone}
// //         onChange={(e) =>
// //           setFormData({ ...formData, contactPhone: e.target.value })
// //         }
// //         required
// //       />
// //       <input
// //         type="url"
// //         placeholder="Website (optional, https://example.com)"
// //         className="w-full border p-2 rounded"
// //         value={formData.websiteUrl}
// //         onChange={(e) =>
// //           setFormData({ ...formData, websiteUrl: e.target.value })
// //         }
// //       />
// //       <select
// //         className="w-full border p-2 rounded"
// //         value={formData.industry}
// //         onChange={(e) => setFormData({ ...formData, industry: e.target.value })}
// //       >
// //         <option value="IT">IT</option>
// //         <option value="Finance">Finance</option>
// //         <option value="Engineering">Engineering</option>
// //         <option value="Chief">Chief</option>
// //       </select>
// //     </div>
// //   );
// // };

// // // Step 3 Component
// // const Step3 = ({ formData, setFormData }) => {
// //   return (
// //     <div className="space-y-4">
// //       <input
// //         type="text"
// //         placeholder="Office Address Line (optional)"
// //         className="w-full border p-2 rounded"
// //         value={formData.addressLine}
// //         onChange={(e) =>
// //           setFormData({ ...formData, addressLine: e.target.value })
// //         }
// //       />
// //       <input
// //         type="text"
// //         placeholder="City (optional)"
// //         className="w-full border p-2 rounded"
// //         value={formData.city}
// //         onChange={(e) => setFormData({ ...formData, city: e.target.value })}
// //       />
// //       <input
// //         type="text"
// //         placeholder="State/Province (optional)"
// //         className="w-full border p-2 rounded"
// //         value={formData.state}
// //         onChange={(e) => setFormData({ ...formData, state: e.target.value })}
// //       />
// //       <input
// //         type="text"
// //         placeholder="Postal Code (optional)"
// //         className="w-full border p-2 rounded"
// //         value={formData.postalCode}
// //         onChange={(e) =>
// //           setFormData({ ...formData, postalCode: e.target.value })
// //         }
// //       />
// //       <input
// //         type="text"
// //         placeholder="Country (optional)"
// //         className="w-full border p-2 rounded"
// //         value={formData.country}
// //         onChange={(e) => setFormData({ ...formData, country: e.target.value })}
// //       />
// //     </div>
// //   );
// // };

// // // Step 4 Component
// // const Step4 = ({ formData, setFormData }) => {
// //   const handleFileChange = (e) => {
// //     setFormData({
// //       ...formData,
// //       logoUrl: URL.createObjectURL(e.target.files[0]),
// //     });
// //   };

// //   return (
// //     <div className="space-y-4">
// //       <textarea
// //         placeholder="Company Description"
// //         rows="5"
// //         className="w-full border p-2 rounded"
// //         value={formData.companyDescription}
// //         onChange={(e) =>
// //           setFormData({ ...formData, companyDescription: e.target.value })
// //         }
// //         required
// //       />
// //       <input
// //         type="file"
// //         accept="image/*"
// //         className="w-full"
// //         onChange={handleFileChange}
// //       />
// //       {formData.logoUrl && (
// //         <div className="mt-2">
// //           <img src={formData.logoUrl} alt="Logo Preview" className="max-h-40" />
// //         </div>
// //       )}
// //     </div>
// //   );
// // };

// // // Step 5 Component (Added registeredNumber to review)
// // const Step5 = ({ formData, onSubmit, isSavingProfile, profileError }) => {
// //   return (
// //     <div className="space-y-2 text-sm text-gray-700">
// //       <div>
// //         <strong>Username:</strong> {formData.username}
// //       </div>
// //       <div>
// //         <strong>Email:</strong> {formData.employerEmail}
// //       </div>
// //       <div>
// //         <strong>Company Name:</strong> {formData.brandName}
// //       </div>
// //       <div>
// //         <strong>Registered Number:</strong> {formData.registeredNumber || "N/A"}
// //       </div>
// //       <div>
// //         <strong>Contact Phone:</strong> {formData.contactPhone}
// //       </div>
// //       <div>
// //         <strong>Website:</strong> {formData.websiteUrl || "N/A"}
// //       </div>
// //       <div>
// //         <strong>Industry:</strong> {formData.industry}
// //       </div>
// //       <div>
// //         <strong>Address:</strong>{" "}
// //         {`${formData.addressLine || ""}${formData.addressLine && ", "}${
// //           formData.city || ""
// //         }${formData.city && ", "}${formData.state || ""}${
// //           formData.state && ", "
// //         }${formData.postalCode || ""}${formData.postalCode && ", "}${
// //           formData.country || ""
// //         }` || "N/A"}
// //       </div>
// //       <div>
// //         <strong>Description:</strong> {formData.companyDescription}
// //       </div>
// //       <div>
// //         <strong>Logo:</strong>{" "}
// //         {formData.logoUrl ? "Uploaded" : "No file selected"}
// //       </div>
// //       {profileError && (
// //         <p className="text-red-500">
// //           {profileError.data?.message || "Profile save failed."}
// //         </p>
// //       )}
// //       <button
// //         onClick={onSubmit}
// //         className="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 mt-4"
// //         disabled={isSavingProfile}
// //       >
// //         {isSavingProfile ? "Submitting..." : "Submit"}
// //       </button>
// //     </div>
// //   );
// // };

// // export { Step1, Step2, Step3, Step4, Step5 }; // import React, { useState } from "react";

// // // import {
// // //   useRegisterEmployerMutation,
// // //   useCreateEmployerProfileMutation,
// // // } from "../../redux/api/employerApi";

// // // const steps = ["Account", "Company", "Contact", "Description", "Review"];

// // // export default function Register() {
// // //   const [step, setStep] = useState(1);
// // //   const [userId, setUserId] = useState(null);

// // //   const [formData, setFormData] = useState({
// // //     username: "ef",
// // //     employerEmail: "a@mail.com",
// // //     password: "abc",
// // //     confirmPassword: "abc",
// // //     brandName: "",
// // //     registeredNumber: "",
// // //     contactPhone: "",
// // //     addressLine: "",
// // //     city: "",
// // //     state: "",
// // //     postalCode: "",
// // //     country: "",
// // //     websiteUrl: "",
// // //     industry: "IT",
// // //     companyDescription: "",
// // //     logoUrl: null,
// // //   });

// // //   // RTK Query mutations
// // //   const [registerEmployer, { isLoading: isRegistering, error: registerError }] =
// // //     useRegisterEmployerMutation();
// // //   const [
// // //     createEmployerProfile,
// // //     { isLoading: isSavingProfile, error: profileError },
// // //   ] = useCreateEmployerProfileMutation();

// // //   const renderStep = () => {
// // //     switch (step) {
// // //       case 1:
// // //         return (
// // //           <Step1
// // //             formData={formData}
// // //             setFormData={setFormData}
// // //             onNext={handleStep1Next}
// // //             isRegistering={isRegistering}
// // //             registerError={registerError}
// // //           />
// // //         );
// // //       case 2:
// // //         return <Step2 formData={formData} setFormData={setFormData} />;
// // //       case 3:
// // //         return <Step3 formData={formData} setFormData={setFormData} />;
// // //       case 4:
// // //         return <Step4 formData={formData} setFormData={setFormData} />;
// // //       case 5:
// // //         return (
// // //           <Step5
// // //             formData={formData}
// // //             onSubmit={handleFinalSubmit}
// // //             isSavingProfile={isSavingProfile}
// // //             profileError={profileError}
// // //           />
// // //         );
// // //       default:
// // //         return null;
// // //     }
// // //   };

// // //   // Step 1: Register User
// // //   const handleStep1Next = async () => {
// // //     const employerData = {
// // //       username: formData.username,
// // //       email: formData.employerEmail,
// // //       password: formData.password,
// // //       confirmPassword: formData.confirmPassword,
// // //       role: "employer",
// // //     };

// // //     try {
// // //       const response = await registerEmployer(employerData).unwrap(); // unwrap() throws error if mutation fails
// // //       setUserId(response.userId); // Assuming backend returns userId
// // //       setStep(2); // Move to next step
// // //     } catch (error) {
// // //       console.error("Registration failed:", error);
// // //       // Error is already available via registerError prop
// // //     }
// // //   };

// // //   // Step 5: Submit Employer Profile
// // //   const handleFinalSubmit = async () => {
// // //     if (!userId) {
// // //       alert("User not registered. Please complete Step 1.");
// // //       return;
// // //     }

// // //     const profileData = {
// // //       user_id: userId,
// // //       company_name: formData.brandName,
// // //       registered_number: formData.registeredNumber,
// // //       contact_phone: formData.contactPhone,
// // //       address_line: formData.addressLine,
// // //       city: formData.city,
// // //       state: formData.state,
// // //       postal_code: formData.postalCode,
// // //       country: formData.country,
// // //       website_url: formData.websiteUrl,
// // //       industry: formData.industry,
// // //       company_description: formData.companyDescription,
// // //       logo_url: formData.logoUrl,
// // //     };

// // //     try {
// // //       await createEmployerProfile(profileData).unwrap();
// // //       alert("Profile saved successfully!");
// // //       window.location.href = "/dashboard";
// // //     } catch (error) {
// // //       console.error("Profile save failed:", error);
// // //       // Error is already available via profileError prop
// // //     }
// // //   };

// // //   const handleNext = () => {
// // //     if (step === 1 && !userId) {
// // //       alert("Please complete registration in Step 1 first.");
// // //       return;
// // //     }
// // //     if (step < 5) setStep(step + 1);
// // //   };

// // //   const handleBack = () => {
// // //     if (step > 1) setStep(step - 1);
// // //   };

// // //   return (
// // //     <div className="max-w-2xl mx-auto p-6">
// // //       <div className="w-full bg-cyan-100 h-2 rounded-full mb-6">
// // //         <div
// // //           className="bg-cyan-500 h-2 rounded-full transition-all duration-300"
// // //           style={{ width: `${(step / steps.length) * 100}%` }}
// // //         />
// // //       </div>
// // //       <div className="text-center font-semibold mb-4">
// // //         Step {step} of {steps.length}: {steps[step - 1]}
// // //       </div>

// // //       {renderStep()}

// // //       <div className="flex justify-between mt-6">
// // //         {step > 1 && (
// // //           <button
// // //             onClick={handleBack}
// // //             className="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400"
// // //           >
// // //             Back
// // //           </button>
// // //         )}
// // //         {step < 5 && (
// // //           <button
// // //             onClick={handleNext}
// // //             className="px-4 py-2 bg-cyan-900 text-white rounded hover:bg-blue-700 ml-auto"
// // //             disabled={isRegistering || isSavingProfile}
// // //           >
// // //             Next
// // //           </button>
// // //         )}
// // //       </div>
// // //     </div>
// // //   );
// // // }

// // // // Step 1 Component
// // // const Step1 = ({
// // //   formData,
// // //   setFormData,
// // //   onNext,
// // //   isRegistering,
// // //   registerError,
// // // }) => {
// // //   return (
// // //     <div className="space-y-4">
// // //       <input
// // //         type="text"
// // //         placeholder="Username"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.username}
// // //         onChange={(e) => setFormData({ ...formData, username: e.target.value })}
// // //         required
// // //       />
// // //       <input
// // //         type="email"
// // //         placeholder="example@mail.com"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.employerEmail}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, employerEmail: e.target.value })
// // //         }
// // //         required
// // //       />
// // //       <input
// // //         type="password"
// // //         placeholder="Password"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.password}
// // //         onChange={(e) => setFormData({ ...formData, password: e.target.value })}
// // //         required
// // //       />
// // //       <input
// // //         type="password"
// // //         placeholder="Confirm Password"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.confirmPassword}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, confirmPassword: e.target.value })
// // //         }
// // //         required
// // //       />
// // //       {registerError && (
// // //         <p className="text-red-500">
// // //           {registerError.data?.message || "Registration failed."}
// // //         </p>
// // //       )}
// // //       <button
// // //         onClick={onNext}
// // //         className="px-4 py-2 bg-cyan-900 text-white rounded hover:bg-blue-700 w-full"
// // //         disabled={isRegistering}
// // //       >
// // //         {isRegistering ? "Registering..." : "Register & Next"}
// // //       </button>
// // //     </div>
// // //   );
// // // };

// // // // Step 2 Component
// // // const Step2 = ({ formData, setFormData }) => {
// // //   return (
// // //     <div className="space-y-4">
// // //       <input
// // //         type="text"
// // //         placeholder="Company Name"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.brandName}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, brandName: e.target.value })
// // //         }
// // //         required
// // //       />
// // //       <input
// // //         type="tel"
// // //         placeholder="Contact Phone"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.contactPhone}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, contactPhone: e.target.value })
// // //         }
// // //         required
// // //       />
// // //       <input
// // //         type="url"
// // //         placeholder="Website (https://example.com)"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.websiteUrl}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, websiteUrl: e.target.value })
// // //         }
// // //       />
// // //       <select
// // //         className="w-full border p-2 rounded"
// // //         value={formData.industry}
// // //         onChange={(e) => setFormData({ ...formData, industry: e.target.value })}
// // //       >
// // //         <option value="IT">IT</option>
// // //         <option value="Finance">Finance</option>
// // //         <option value="Engineering">Engineering</option>
// // //         <option value="Chief">Chief</option>
// // //       </select>
// // //     </div>
// // //   );
// // // };

// // // // Step 3 Component
// // // const Step3 = ({ formData, setFormData }) => {
// // //   return (
// // //     <div className="space-y-4">
// // //       <input
// // //         type="text"
// // //         placeholder="Office Address Line"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.addressLine}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, addressLine: e.target.value })
// // //         }
// // //       />
// // //       <input
// // //         type="text"
// // //         placeholder="City"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.city}
// // //         onChange={(e) => setFormData({ ...formData, city: e.target.value })}
// // //       />
// // //       <input
// // //         type="text"
// // //         placeholder="State/Province"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.state}
// // //         onChange={(e) => setFormData({ ...formData, state: e.target.value })}
// // //       />
// // //       <input
// // //         type="text"
// // //         placeholder="Postal Code"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.postalCode}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, postalCode: e.target.value })
// // //         }
// // //       />
// // //       <input
// // //         type="text"
// // //         placeholder="Country"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.country}
// // //         onChange={(e) => setFormData({ ...formData, country: e.target.value })}
// // //       />
// // //     </div>
// // //   );
// // // };

// // // // Step 4 Component
// // // const Step4 = ({ formData, setFormData }) => {
// // //   const handleFileChange = (e) => {
// // //     setFormData({
// // //       ...formData,
// // //       logoUrl: URL.createObjectURL(e.target.files[0]),
// // //     });
// // //   };

// // //   return (
// // //     <div className="space-y-4">
// // //       <textarea
// // //         placeholder="Company Description"
// // //         rows="5"
// // //         className="w-full border p-2 rounded"
// // //         value={formData.companyDescription}
// // //         onChange={(e) =>
// // //           setFormData({ ...formData, companyDescription: e.target.value })
// // //         }
// // //         required
// // //       />
// // //       <input
// // //         type="file"
// // //         accept="image/*"
// // //         className="w-full"
// // //         onChange={handleFileChange}
// // //       />
// // //       {formData.logoUrl && (
// // //         <div className="mt-2">
// // //           <img src={formData.logoUrl} alt="Logo Preview" className="max-h-40" />
// // //         </div>
// // //       )}
// // //     </div>
// // //   );
// // // };

// // // // Step 5 Component
// // // const Step5 = ({ formData, onSubmit, isSavingProfile, profileError }) => {
// // //   return (
// // //     <div className="space-y-2 text-sm text-gray-700">
// // //       <div>
// // //         <strong>Username:</strong> {formData.username}
// // //       </div>
// // //       <div>
// // //         <strong>Email:</strong> {formData.employerEmail}
// // //       </div>
// // //       <div>
// // //         <strong>Company Name:</strong> {formData.brandName}
// // //       </div>
// // //       <div>
// // //         <strong>Contact Phone:</strong> {formData.contactPhone}
// // //       </div>
// // //       <div>
// // //         <strong>Website:</strong> {formData.websiteUrl}
// // //       </div>
// // //       <div>
// // //         <strong>Industry:</strong> {formData.industry}
// // //       </div>
// // //       <div>
// // //         <strong>Address:</strong> {formData.addressLine}, {formData.city},{" "}
// // //         {formData.state}, {formData.postalCode}, {formData.country}
// // //       </div>
// // //       <div>
// // //         <strong>Description:</strong> {formData.companyDescription}
// // //       </div>
// // //       <div>
// // //         <strong>Logo:</strong>{" "}
// // //         {formData.logoUrl ? "Uploaded" : "No file selected"}
// // //       </div>
// // //       {profileError && (
// // //         <p className="text-red-500">
// // //           {profileError.data?.message || "Profile save failed."}
// // //         </p>
// // //       )}
// // //       <button
// // //         onClick={onSubmit}
// // //         className="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 mt-4"
// // //         disabled={isSavingProfile}
// // //       >
// // //         {isSavingProfile ? "Submitting..." : "Submit"}
// // //       </button>
// // //     </div>
// // //   );
// // // };
